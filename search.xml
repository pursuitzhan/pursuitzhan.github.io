<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>这篇文章用来介绍怎样通过Github和hexo来搭建个人博客</title>
    <url>/2021/03/01/build-blog/</url>
    <content><![CDATA[<h3 id="前言：需要准备的工具"><a href="#前言：需要准备的工具" class="headerlink" title="前言：需要准备的工具"></a>前言：需要准备的工具</h3><ol>
<li>github账号</li>
<li>Git环境</li>
<li>Node.js环境（hexo基于Node.js）</li>
<li>Hexo博客框架</li>
<li>Next主题</li>
</ol>
<span id="more"></span>
<h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><h4 id="Github搭建个人仓库"><a href="#Github搭建个人仓库" class="headerlink" title="Github搭建个人仓库"></a>Github搭建个人仓库</h4><p>仓库名不能随便取名，应该命名为 ： 用户名.<a href="http://github.io/">http://github.io</a> 。这个用户名即你的Github的账号名，这是固定的写法，不容易出错。<br><img src="https://raw.githubusercontent.com/pursuitzhan/picture/master/img/20210302114609.png" alt="20210302114609"></p>
<p>建立仓库后暂时不要管。</p>
<h4 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h4><p>可以参考廖雪峰的git教程 <a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰的Git教程</a></p>
<p>安装完成后在命令提示符中输入git –version验证是否安装成功</p>
<h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><ol>
<li><p>安装包下载</p>
<p> <a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> 这个网址下载速度快一点</p>
</li>
<li><p>检测是否安装成功</p>
<ol>
<li>检测Node.js是否安装成功，在命令行中输入 node -v</li>
<li>检测npm是否安装成功，在命令行中输入npm -v </li>
</ol>
</li>
</ol>
<h4 id="安装HExo"><a href="#安装HExo" class="headerlink" title="安装HExo"></a>安装HExo</h4><ol>
<li><p>在电脑里新建一个文件夹，用来存放建博客需要的文件</p>
</li>
<li><p>然后在这个文件夹里右键， 选择 Git Bash Here</p>
</li>
<li><p>使用npm命令安装hexo： npm install hexo-cli -g</p>
<blockquote>
<p>安装完后输入hexo -v验证是否安装成功</p>
</blockquote>
</li>
<li><p>对博客进行初始化： hexo init</p>
<blockquote>
<p>注：这里init后面可以跟文件夹名字，这样将会新建一个文件夹用来存放博客，但是我感觉没有必要新建一个</p>
</blockquote>
</li>
<li><p>接着输入npm install安装必备的组件</p>
</li>
<li><p>输入hexo g生成静态网页</p>
</li>
<li><p>然后输入hexo s打开本地服务器</p>
</li>
<li><p>然后浏览器打开<a href="http://localhost:4000/">localhost:4000/</a>, 查看网页</p>
</li>
<li><p>按ctrl+c关闭本地服务器</p>
</li>
</ol>
<h4 id="将Git与你的Github账号绑定"><a href="#将Git与你的Github账号绑定" class="headerlink" title="将Git与你的Github账号绑定"></a>将Git与你的Github账号绑定</h4><ol>
<li><p>鼠标右击打开Git Bash，设置user.name和user.email配置信息：</p>
<pre><code> &gt; git config --global user.name &quot;你的GitHub用户名&quot; 

 &gt; git config --global user.email &quot;你的GitHub注册邮箱&quot;
</code></pre>
</li>
<li><p>生成ssh密钥文件：</p>
<pre><code> &gt; ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;
</code></pre>
</li>
<li><p>然后直接三个回车即可，默认不需要设置密码。然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制</p>
</li>
</ol>
<ol start="4">
<li>打开GitHub_Settings_keys 页面，新建new SSH Key</li>
</ol>
<ol start="5">
<li><p>Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。在Git Bash中检测GitHub公钥设置是否成功，输入 ssh <a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;">&#x67;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#x68;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;</a> </p>
</li>
<li><p>打开博客根目录下的_config.yml文件，这是博客的配置文件，在这里你可以修改与博客相关的各种信息。</p>
<p> 修改最后一行的配置：</p>
<blockquote>
<p>deploy:<br>type: git<br>repository: 这里填GitHub里面的SSH链接<br>branch: master  </p>
</blockquote>
</li>
</ol>
<div align="center"><img src="https://raw.githubusercontent.com/pursuitzhan/picture/master/img/20210302125823.png" alt="20210302125823" width="80%" height=""/></div>

<h4 id="写文章，发布文章"><a href="#写文章，发布文章" class="headerlink" title="写文章，发布文章"></a>写文章，发布文章</h4><ol>
<li><p>首先在博客根目录下右键打开git bash，安装一个扩展npm i hexo-deployer-git</p>
</li>
<li><p>然后输入hexo new post “article title”，新建一篇文章  </p>
</li>
<li><p>然后打开D:\study\program\blog\source_posts的目录，可以发现下面多了一个文件夹和一个.md文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>
</li>
<li><p>编写完markdown文件后，根目录下输入hexo g生成静态网页，然后输入hexo s可以本地预览效果，最后输入hexo d上传到github上。这时打开你的github.io主页就能看到发布的文章啦</p>
</li>
</ol>
<p>5.注：使用 hexo deploy 命令会同时调用 hexo generate 命令，在博客根目录生成一个 public 文件夹，里面的文件就是推送到 GitHub 上的文件。之后想要更新博客内容的话，建议首先使用 hexo clean 命令清除掉 public 文件夹，然后再使用 hexo deploy 推送</p>
<h4 id="修改Next主题"><a href="#修改Next主题" class="headerlink" title="修改Next主题"></a>修改Next主题</h4><ol>
<li>修改文章内链接文本样式</li>
</ol>
<p>修改Blog/themes/next/source/css/_common/components/post/post.styl，在末尾添加CSS样式:</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 文章内链接文本样式  </span></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;  </span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>; <span class="comment">//原始链接颜色  </span></span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>; <span class="comment">//底部分割线颜色</span></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>; <span class="comment">//鼠标经过颜色</span></span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>; <span class="comment">//底部分割线颜色</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>网页</tag>
      </tags>
  </entry>
  <entry>
    <title>spyder1</title>
    <url>/2021/03/01/spyder1/</url>
    <content><![CDATA[<h2 id="先介绍怎样安装分布式数据库MongoDB"><a href="#先介绍怎样安装分布式数据库MongoDB" class="headerlink" title="先介绍怎样安装分布式数据库MongoDB"></a>先介绍怎样安装分布式数据库MongoDB</h2><p>目的：便于存储非结构化的数据  </p>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫 环境安装</tag>
      </tags>
  </entry>
  <entry>
    <title>spyder2</title>
    <url>/2021/03/02/spyder2/</url>
    <content><![CDATA[<h2 id="爬虫的基本用法"><a href="#爬虫的基本用法" class="headerlink" title="爬虫的基本用法"></a>爬虫的基本用法</h2><p>这篇文章介绍爬虫的基本原理和基本用法</p>
<h4 id="一、爬虫的基本流程"><a href="#一、爬虫的基本流程" class="headerlink" title="一、爬虫的基本流程"></a>一、爬虫的基本流程</h4><ol>
<li>发起请求<ul>
<li>通过HTTP库向目标网页发起request请求，等待服务器响应</li>
</ul>
</li>
<li>获取响应<ul>
<li>若服务器正常响应，会得到一个response，response的内容就是请求的网页的内容</li>
</ul>
</li>
<li>解析内容<ul>
<li>得到的html。可以用正则表达式，网页解析库进行解析</li>
</ul>
</li>
<li>保存数据<ul>
<li>可以存为文本，也可保存至数据库</li>
</ul>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>spyder2</title>
    <url>/2021/03/02/%E8%BD%AF%E4%BB%B6%E5%91%BD%E4%BB%A4%E9%9A%8F%E6%89%8B%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="软件的命令随手记"><a href="#软件的命令随手记" class="headerlink" title="软件的命令随手记"></a>软件的命令随手记</h2><p>这个文档主要用来记各种软件使用过程重容易忘记的命令</p>
<span id="more"></span>

<h3 id="vscode相关"><a href="#vscode相关" class="headerlink" title="vscode相关"></a>vscode相关</h3><ol>
<li><p>在vscode中打开命令行： “ ctrl+shift+` ”  </p>
</li>
<li><p>编写markdown时，利用插件picgo插入图片快捷键，win10从剪贴板插入图片：<code>Ctrl+atl+u</code></p>
</li>
</ol>
<h3 id="hexo相关"><a href="#hexo相关" class="headerlink" title="hexo相关"></a>hexo相关</h3><ol>
<li><p>新建一个博客：<code>hexo new &quot;这里写个名字&quot;</code></p>
</li>
<li><p>清除public：<code>hexo clean</code> ; 生成网页：<code>hexo g</code> ; 本地预览：<code>hexo s</code> ; 部署：<code>hexo d</code>;</p>
</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>软件命令</tag>
      </tags>
  </entry>
</search>
